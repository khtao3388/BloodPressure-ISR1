@page "/bpreadings"


@inject IBPReadingRepository repository

<PageTitle>Index</PageTitle>

<h1 class="p-3 mb-2 border-primary bg-primary text-white border">Index</h1>

<p>
    <a href="bpreadings/create" class="btn btn-primary">Create New</a>
</p>

@if (bpreadings == null)
{
    <p>Loading...</p>
}
else
{

 <QuickGrid Class="table" Items="bpreadings">
    <PropertyColumn Property="bpreadings => bpreadings.DateTaken" />
    <PropertyColumn Property="bpreadings => bpreadings.TimeTaken" />
    <PropertyColumn Property="bpreadings => bpreadings.Systolic" />
    <PropertyColumn Property="bpreadings => bpreadings.Diastolic" />
    <PropertyColumn Property="bpreadings => bpreadings.HeartRate" />

    <TemplateColumn Context="bpreadings">
        <a href="@($"bpreadings/edit?id={bpreadings.Id}")">Edit</a> |
        <a href="@($"bpreadings/delete?id={bpreadings.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

<div class="d-grid gap-2 col-6 mx-auto my-3">
    <a href="bpreadings/create" class="btn btn-primary btn-lg">
        <i class="bi bi-plus-circle me-2"></i>Create New
    </a>
</div>

    
    
    
}


@code {
    private IQueryable<BPReading> bpreadings;

    protected override async Task OnInitializedAsync()
    {
        // Fetch all readings
        var allReadings = await repository.GetAllAsync();

        // Convert to IQueryable for better performance with QuickGrid
        bpreadings = allReadings.AsQueryable();
    }

    

}